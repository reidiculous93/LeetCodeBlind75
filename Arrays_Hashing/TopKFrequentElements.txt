/Given an integer array nums and an integer k, return the k most frequent elements.
//You may return the answer in any order.

public int[] topKFrequent(int[] nums, int k) {
        Map<Integer, Integer> counts = new HashMap<>();

        for (int num : nums) {
            counts.put(num, counts.getOrDefault(num, 0) + 1);
        }

        PriorityQueue<Map.Entry<Integer, Integer>> minHeap = new PriorityQueue<Map.Entry<Integer, Integer>>((n1, n2) -> n1.getValue() - n2.getValue());

        for (Map.Entry<Integer, Integer> entry : counts.entrySet()) {
            minHeap.add(entry);
            if (minHeap.size() > k) {
                minHeap.poll();
            }
        }

        int[] topNums = new int[k];

        while (!minHeap.isEmpty()) {
            for (int i = 0; i < k; i++) {
                topNums[i] = minHeap.poll().getKey();
            }
        }
        return topNums;
    }